/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.92
 * Generated at: 2019-04-08 15:56:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("\t<title>在线填单 - 我要寄件</title>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"./js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"./js/order.js\"></script>\r\n");
      out.write("\t<link href=\"./css/order.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.html", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"main_div\">\r\n");
      out.write("\t\t<div class=\"form_div\">\r\n");
      out.write("\t\t\t<form action=\"./Order\" method=\"post\">\r\n");
      out.write("\t\t\t<div id=\"sender_div\">\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >寄件方:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"sender\" placeholder=\"请填写寄件方名称\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >寄件方电话:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"senderphone\" placeholder=\"请填写寄件方联系电话\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >寄件方地区:</lable>\r\n");
      out.write("\t\t\t\t\t<select class=\"sheng\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\" disabled selected hidden>-省-</option>\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "regions-level1.html", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<select class=\"shi\" disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t\t<option  value=\"\" disabled selected hidden>-市-</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<select class=\"qu\" name=\"srcregion\" disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\" disabled selected hidden>-区-</option>\r\n");
      out.write("\t\t\t\t\t</select><br>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"srcmergername\" placeholder=\"请选择寄件方地区\"  readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >寄件方详细地址:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"senderaddr\" placeholder=\"请填写寄件方详细地址\" style=\"width:300px\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t\t<div id=\"recipient_div\">\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >收件方:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"recipient\" placeholder=\"请填写收件方名称\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >收件方电话:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"recipientphone\" placeholder=\"请填写收件方联系电话\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >收件方地区:</lable>\r\n");
      out.write("\t\t\t\t\t<select class=\"sheng\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\" disabled selected hidden>-省-</option>\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "regions-level1.html", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<select class=\"shi\" disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t\t<option  value=\"\" disabled selected hidden>-市-</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<select class=\"qu\" name=\"desregion\" disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"desr\" disabled selected hidden>-区-</option>\r\n");
      out.write("\t\t\t\t\t</select><br>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"desmergername\" placeholder=\"请选择收件方地区\"  readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"input_div\">\r\n");
      out.write("\t\t\t\t\t<lable >收件方详细地址:</lable><br>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" value=\"\" name=\"recipientaddr\" placeholder=\"请填写收件方详细地址\" style=\"width:300px\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t\t<div >\r\n");
      out.write("\t\t\t\t查询码:\r\n");
      out.write("\t\t\t\t<select name=\"querycode\" class=\"querycode\" >\r\n");
      out.write("\t\t\t\t\t<option value=\"no\"selected >不使用</option>\r\n");
      out.write("\t\t\t\t\t<option value =\"staticcode\" >设置查询码</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"code\" placeholder=\"请填写查询码\" style=\"width:95px\"/>\r\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"提交\" style=\"width:100px;float:right\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"notes_div\">\r\n");
      out.write("\t\t\t\t\t<span class=\"warning-title\"><img src=\"./img/warning.png\" width=\"25\" height=\"25\"> <b>快递服务协议：</b></span><br>\r\n");
      out.write("\t\t\t\t\t<b>一、快递服务法律关系和服务范围：</b>本协议经寄件人签名、收寄员收取快件后成立生效，由在运单上印制企业名称全称或者盖章的收寄快递企业与寄件人建立快递服务合同关系并提供快递服务（代收货款须另签协议），承诺及时安全地交付快件。<br>\r\n");
      out.write("\t\t\t\t\t<b>二、运单填写：</b>寄件人须用力工整地手写或打印运单，清楚、准确、完整、如实地填写寄件人和收件人的姓名、地址、联系电话以及内件品名、数量、付费方式和赔偿约定（保价时还须填写申报内件价值即保价价值）等内容并签名。寄件人不得隐瞒或虚报内件的性质、品名、数量、内件价值等真实情况，否则须承担相应责任 。<br>\r\n");
      out.write("\t\t\t\t\t<b>三、包装：</b>寄件人应根据内件性质，在满足装卸、运送、派送投递等快递环节要求的情况下对快件进行必要和足够的包装，并保证快件不会污染和损害其他快件。<br>\r\n");
      out.write("\t\t\t\t\t<b>四、禁寄：</b>寄件人承诺不得交寄以下禁寄物品和危险品（详细可查阅国家邮政局《禁寄物品指导目录及处理办法》），违者须承担相应责任：\r\n");
      out.write("\t\t\t\t\t\t1、武器、弹药及仿真武器、管制刀具；2、易燃、易爆、易腐蚀性物品；3、放射性物质；4、烈性毒药、生化制品、传染性物品；5、毒品、麻醉药物；6、危害国家安全和社会政治稳定以及淫秽的出版物、宣传品、印刷品、光盘制品等；7、妨害公共卫生的物品；8、包装不妥，可能危害人身和其他快件的物品；9、流通货币和有价证券；10、国家法律法规规章明令禁止寄递的其他物品。\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<b>五、验视及安全检查：</b>快递企业收寄员对信件可开拆验视但不得检查内容，对信件以外快件按国家规定当场验视，确认不属禁寄物品且内件性质、品名与所填报内容相符后由收寄员签名。国家禁寄物品、寄件人拒绝验视的，收寄员不得收寄。国家有关司法机关和执法机关出于安全或办理案件需要可依法对快件进行相应检查。<br>\r\n");
      out.write("\t\t\t\t\t<b>六、快递服务收费：</b>快递费是指快递企业向寄件人或收件人收取的用于提供快件收取、中转、运输和派送投递等快递服务的费用，收费金额由双方按市场价协商后填写在运单上，月结时可另签收费协议。快件经二次派送投递因收件人原因仍无法投交时由收件人自取或收件人支付每次人民币30元的逾期派送投递费后由快递企业再进行派送投递。<br>\r\n");
      out.write("\t\t\t\t\t<b>七、保价及保险：</b>寄件人可自愿对快件向商业保险机构办理保险，<b>对贵重物品和单票内件价值超过人民币壹仟元的快件应尽量向快递企业办理保价。</b>保价快件除支付快递费外还须支付保价费，保价费为申报内件价值的3%（双方另有约定的按约定收取保价费）。保价费须当场支付。未申报保价、未填写内件价值以及未当场支付保价费的视为未保价。<br>\r\n");
      out.write("\t\t\t\t\t<b>八、快递及签收：</b>快件按收件人姓名地址当面投递交付和验收。快件外包装破损且收件人查验内件发现存在丢失、损毁或不符等异常情况而拒收时须与派送投递员共同签字注明该情况，收件人拒绝签字的，派送投递员注明情况后退件给寄件人。收件人如不在现场等原因无法签收时，派送投递员可电话联系收件人（寄件人）并征得其同意后可由其指定的人代为签收，代收时派送投递员须核实代收人的身份并记载其身份证件号码或联系电话等必要信息。代收人应及时向收件人转交快件。<br>\r\n");
      out.write("\t\t\t\t\t<b>九、投递时限：</b>汽车公路运输（简称汽运）的按《快递服务》国家标准执行，航空运输的由双方另行约定，同城当天快递按运单正面承诺执行。<br>\r\n");
      out.write("\t\t\t\t\t<b>十、查询方式：</b>寄件人可自快件交寄之日起一年内持快递运单通过运单上载明的查询电话或网站查询快件信息，逾期后不再受理查询服务。<br>\r\n");
      out.write("\t\t\t\t\t\t运单上印制的查询电话及网站仅用于寄件人查询其所寄快件的信息、协调寄件人与收寄快件的快递企业就快递服务所发生的争议或纠纷。\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<b>十一、赔偿标准：</b>在寄递过程中发生快件延误、丢失、损毁、内件不符时，寄件人有权追究快递企业的违约责任或侵权损害赔偿责任（双方另有约定的按约定执行）：<br>\r\n");
      out.write("\t\t\t\t\t\t  1、快件延误的赔偿标准：免除本次快递费（不含保价费）。由于延误导致内件直接价值丧失的，由快递企业按照快件损毁赔偿标准进行赔偿。由于收件人姓名、地址、电话等信息错误或变更以及因收件人外出、无法联系等原因致使快件无法按时交付的，不属于快件延误，快递企业不承担延误责任。<br>\r\n");
      out.write("\t\t\t\t\t\t  2、<b>快件丢失、损毁、内件不符的赔偿标准：</b><br>\r\n");
      out.write("\t\t\t\t\t\t  （1）免除本次快递费（不含保价费）；（2）保价快件按寄件人在运单填写的保价价值即申报内件价值范围内赔偿内件实际损失；<b>（3）未保价快件按寄件人在运单上选填的本次实际支付快递费的合理倍数赔偿，寄件人未选填赔偿标准的，视为同意按本次实际支付快递费的五倍赔偿。</b><br>\r\n");
      out.write("\t\t\t\t\t<b>十二、免责声明：</b>快递企业依据《中华人民共和国邮政法》、《快递服务》国家标准等对因下列原因之一造成的快件损失不承担赔偿责任：<br>\r\n");
      out.write("\t\t\t\t\t\t\t1、不可抗力（保价快件除外）；2、所寄物品本身的自然性质或者合理损耗；3、寄件人或收件人的过错。<br>\r\n");
      out.write("\t\t\t\t\t<b>十三、争议解决方式：</b>寄件人与快递企业就快递服务协议发生争议的，可先协商解决；协商不成或不愿意协商的，可依法选择投诉、仲裁或诉讼等方式解决。<br>\r\n");
      out.write("\t\t\t\t\t<b>十四、法律适用：</b>本协议适用《中华人民共和国邮政法》、《中华人民共和国合同法》等相关法律法规，未尽事宜按适用法律法规执行。<br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.html", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
